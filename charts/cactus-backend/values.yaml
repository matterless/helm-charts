# Default values for cactus-backend.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Set to customer's name to use specific parsers. Appended to image.repository. Leave empty to use generic image.
client: ""

image:
  repository: 992382468184.dkr.ecr.eu-central-1.amazonaws.com/cactus-backend
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 8090

ingress:
  enabled: false
  # className: nginx
  annotations:
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: cactus-backend.example.com
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 1
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 256Mi

nodeSelector: {}

tolerations: []

affinity: {}

monitoring:
  namespace: monitoring
  podMonitor:
    create: false
    scrapeInterval: 10s

persistentVolume:
  ## If true, create/use a Persistent Volume Claim
  ## If false, use emptyDir
  ##
  enabled: true

  ## If set it will override the name of the created persistent volume claim
  ## generated by the stateful set.
  ##
  statefulSetNameOverride: ""

  ## Persistent Volume access modes
  ## Must match those of existing PV or dynamic provisioner
  ## Ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  accessModes:
    - ReadWriteOnce

  ## Persistent Volume labels
  ##
  labels: {}

  ## Persistent Volume annotations
  ##
  annotations: {}

  ## Persistent Volume existing claim name
  ## Requires server.persistentVolume.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  existingClaim: ""

  ## Persistent Volume size
  ##
  size: 20Gi

  ## Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: ""

  ## Persistent Volume Binding Mode
  ## If defined, volumeBindingMode: <volumeBindingMode>
  ## If undefined (the default) or set to null, no volumeBindingMode spec is
  ##   set, choosing the default mode.
  ##
  # volumeBindingMode: ""

  ## Subdirectory of Persistent Volume to mount
  ## Useful if the volume's root directory is not empty
  ##
  subPath: ""

  ## Persistent Volume Claim Selector
  ## Useful if Persistent Volumes have been provisioned in advance
  ## Ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#selector
  ##
  # selector:
  #  matchLabels:
  #    release: "stable"
  #  matchExpressions:
  #    - { key: environment, operator: In, values: [ dev ] }

  ## Persistent Volume Name
  ## Useful if Persistent Volumes have been provisioned in advance and you want to use a specific one
  ##
  # volumeName: ""

emptyDir:
  ## emptyDir volume size limit
  ##
  sizeLimit: ""


# These values determine which keys inside the Kubernetes secret that contain the contents
# of the configs/config.json and parsers/config.json files that are mounted by the chart:

# generalConfigKey: cactus-backend-general-config
# clientParserConfigKey: cactus-backend-client-parser-config
